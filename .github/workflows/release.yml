name: release

on:
  push:
    tags:
      - "v*"

env:
  SHORT_NAME: diagnose
  RUST_BACKTRACE: 1

jobs:
  build-x86_64:
    name: Build binaries for x86_64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            file: ./target/x86_64-unknown-linux-musl/release/${{ github.event.repository.name }}
            strip: true
            before_build: true
            before_build_script: ./.github/before-build-linux.sh
            build_args: --release  --target x86_64-unknown-linux-musl
            release_name: linux-x86_64

          - os: macos-latest
            file: ./target/release/${{ github.event.repository.name }}
            strip: true
            before_build: false
            build_args: --release
            release_name: mac-x86_64

          - os: windows-latest
            file: ./target/release/${{ github.event.repository.name }}.exe
            strip: false
            before_build: false
            build_args: --release
            release_name: windows-x86_64.exe

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Resume cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-x86_64-release-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-x86_64-release

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Before Build
        if: ${{ matrix.before_build }}
        run: bash ${{ matrix.before_build_script }}
        shell: bash

      - name: Build
        run: cargo build ${{ matrix.build_args }}

      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          file: ${{ matrix.file }}
          strip: ${{ matrix.strip }}
          args: --best

      - name: Rename binary
        run: mv ${{ matrix.file }} ${{ env.SHORT_NAME }}-${{ matrix.release_name }}

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: x86_64
          path: ${{ env.SHORT_NAME }}-${{ matrix.release_name }}

  release:
    name: Release
    needs: [build-x86_64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: x86_64
          path: ./packages

      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          files: |
            packages/*
            LICENSE
